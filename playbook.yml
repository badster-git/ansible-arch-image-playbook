---
- name: "Configure host"
  hosts: all
  vars_files: /home/{{ username }}/config.yaml

  tasks:
    - name: "Update package cache"
      become: true
      pacman:
        update_cache: true
      changed_when: false
    - name: "Install base packages"
      become: true
      community.general.pacman:
        name: "{{ base_packages }}"
        state: present
      changed_when: false
    - name: "Enable Services"
      become: true
      service:
        name: "{{ item }}"
        enabled: true
      loop: "{{ services_list }}"
      changed_when: false

- name: "Install AUR"
  hosts: all
  vars_files: /home/{{ username }}/config.yaml

  tasks:
    - name: "Import primary key"
      become: true
      command: pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
      changed_when: false

    - name: Sign primary key
      become: true
      command: pacman-key --lsign-key 3056513887B78AEB
      changed_when: false

    - name: Install keyring and mirrorlist
      become: true
      command: pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst' 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst' --noconfirm
      changed_when: false

    - name: Check pacman.conf contents
      command: cat /etc/pacman.conf
      register: pacman_conf_output
      changed_when: false

    - name: Add repository to pacman.conf
      become: true
      lineinfile:
        path: /etc/pacman.conf
        line: |
          [chaotic-aur]
          Include = /etc/pacman.d/chaotic-mirrorlist
        insertafter: EOF
      when: "'[chaotic-aur]' not in pacman_conf_output.stdout"
      changed_when: false
      failed_when: false

    - name: Update package cache
      become: true
      pacman:
        update_cache: true
      changed_when: false

    - name: Install yay
      become: true
      community.general.pacman:
        name: yay
        state: present

- name: "Configure yay packages"
  hosts: all
  vars_files: /home/{{ username }}/config.yaml

  tasks:
    - name: "Install yay packages"
      become: true
      kewlfft.aur.aur:
        name: "{{ yay_packages }}"
        use: yay
        state: present

- name: "Install nvm"
  hosts: all
  vars_files: /home/{{ username }}/config.yaml

  tasks:
    - name: "Install nvm"
      become: false
      ansible.builtin.shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"

    - name: "Install node"
      become: false
      shell: >
        . /home/{{ username }}/.nvm/nvm.sh && nvm install {{ nvm_version }}
      args:
        executable: /bin/bash
        chdir: "/home/{{ username }}"
        creates: "/home/{{ username }}/.nvm/versions/{{ nvm_version }}"
    - name: "Set nvm to use"
      become: false
      shell: >
        . /home/{{ username }}/.nvm/nvm.sh && nvm use {{ nvm_version }} --save
      args:
        executable: /bin/bash
        chdir: "/home/{{ username }}"
        creates: "/home/{{ username }}/.nvmrc"
- name: "Configure Rust"
  hosts: all
  vars_files: /home/{{ username }}/config.yaml

  tasks:
    - name: "Install rustup"
      become: false
      kewlfft.aur.aur:
        name: "rustup"
        use: yay
        state: present

    - name: "Install toolchain"
      become: false
      shell: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
      args:
        executable: /bin/bash
        chdir: "$HOME"

- name: "Configure neovimdots"
  hosts: all
  vars_files: /home/{{ username }}/config.yaml

  tasks:
    - name: "Install neovimdots"
      become: false
      shell: |
        NONINTERACTIVE=true bash -c "$(curl -fsSL https://raw.githubusercontent.com/ayamir/nvimdots/HEAD/scripts/install.sh)"
      args:
        executable: /bin/bash
        chdir: "$HOME"

- name: "Configure shell"
  hosts: all
  tasks:
    - name: Create zsh config directory
      file:
        path: /home/{{ username }}/.config/zsh
        state: directory
    - name: Create shell config directory
      file:
        path: /home/{{ username }}/.config/shell
        state: directory
    - name: Create cache directory
      file:
        path: /home/{{ username }}/.cache
        state: directory
    - name: Create zsh cache directory
      file:
        path: /home/{{ username }}/.cache/zsh
        state: directory
    - name: Create shell config directory
      copy:
        content: ""
        dest: /home/test-demo/.cache/zsh/history
        force: false
    - name: Move .zshrc to zsh directory
      command: mv /home/{{ username }}/.zshrc /home/{{ username }}/.config/zsh/
      changed_when: false
    - name: Move profile to shell directory
      command: mv /home/{{ username }}/profile /home/{{ username }}/.config/shell/
      changed_when: false
    - name: Create symbolic link for profile
      command: ln -sf /home/{{ username }}/.config/shell/profile /home/{{ username }}/.zprofile
      changed_when: false
    - name: Install zsh-autosuggestions
      command: git clone https://github.com/zsh-users/zsh-autosuggestions /home/{{ username }}/.config/zsh/zsh-autosuggestions
      changed_when: false
    - name: Install fast-syntax-highlighting
      command: git clone https://github.com/zdharma-continuum/fast-syntax-highlighting /home/{{ username }}/.config/zsh/fast-syntax-highlighting
      changed_when: false
    - name: Set login shell as zsh
      ansible.builtin.command: usermod --shell /bin/zsh {{ username }}
      become: true
      changed_when: false
